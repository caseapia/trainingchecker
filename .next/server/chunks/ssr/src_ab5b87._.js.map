{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/src/shared/consts/badges.ts"],"sourcesContent":["import React, { ReactNode } from \"react\";\r\nimport { FaUserCog, FaUserSlash } from \"react-icons/fa\";\r\nimport { FaCode, FaCrown, FaMedal, FaUserShield, FaYoutube } from \"react-icons/fa6\";\r\n\r\ntype BadgeProps = {\r\n  id: number;\r\n  title: string;\r\n  description?: string;\r\n  moder?: number;\r\n  accid?: number | number[];\r\n  verify?: number;\r\n  minModer?: number;\r\n  maxModer?: number;\r\n  minAccId?: number;\r\n  maxAccId?: number;\r\n  minRegDate?: string;\r\n  maxRegDate?: string;\r\n  color: string;\r\n  icon: ReactNode;\r\n  textColor: string;\r\n};\r\n\r\nexport const staffBadges: BadgeProps[] = [\r\n  {\r\n    id: 1,\r\n    title: \"Создатель TRAINING SANDBOX\",\r\n    description: \"Когда-то этот игрок создал LSGOV TRAINING — ныне TRAINING SANDBOX\",\r\n    icon: React.createElement(FaCrown),\r\n    accid: [1, 2],\r\n    color: \"#000000\",\r\n    textColor: \"red\",\r\n  },\r\n  {\r\n    id: 2,\r\n    title: \"Разработчик TRAINING SANDBOX\",\r\n    description: \"Этот игрок учавствует в разработке TRAINING SANDBOX\",\r\n    icon: React.createElement(FaUserCog),\r\n    verify: 3,\r\n    color: \"#B72A2A\",\r\n    textColor: \"#B72A2A\"\r\n  },\r\n  {\r\n    id: 3,\r\n    title: \"Администратор TRAINING SANDBOX\",\r\n    description: \"Этот игрок является администратором TRAINING SANDBOX\",\r\n    icon: React.createElement(FaUserShield),\r\n    minModer: 999,\r\n    maxModer: 9999,\r\n    color: \"#B72A2A\",\r\n    textColor: \"#B72A2A\",\r\n  },\r\n  {\r\n    id: 4,\r\n    title: \"Команда TRAINING SANDBOX\",\r\n    description: \"Этот игрок является подтвержденным членом команды TRAINING SANDBOX\",\r\n    icon: React.createElement(FaUserShield),\r\n    minModer: 1,\r\n    maxModer: 9999,\r\n    color: \"#0f4c816c\",\r\n    textColor: \"rgb(96 158 213)\"\r\n  },\r\n  {\r\n    id: 5,\r\n    title: \"Команда сайта\",\r\n    description: \"Этот игрок является или являлся разработчиком сайта TRAINING CHECKER\",\r\n    icon: React.createElement(FaCode),\r\n    accid: 113145,\r\n    color: \"rgb(42 170 104 / 42%)\",\r\n    textColor: \"rgb(42 170 104)\"\r\n  },\r\n]\r\nexport const playerBadges: BadgeProps[] = [\r\n  {\r\n    id: 6,\r\n    title: \"Ветеран\",\r\n    description: \"Этот значок вручается игрокам, зарегистрировавшим свой аккаунт в числе первых 150000\",\r\n    icon: React.createElement(FaMedal),\r\n    color: \"#00a5a26c\",\r\n    minAccId: 0,\r\n    maxAccId: 150000,\r\n    textColor: \"#00a5a2\"\r\n  },\r\n  {\r\n    id: 7,\r\n    title: \"Ютубер\",\r\n    description: \"Значок был вручен игроку за поддержку сообщества в части рекламы посредством создания контента\",\r\n    icon: React.createElement(FaYoutube),\r\n    color: \"#fe0032\",\r\n    verify: 1,\r\n    textColor: \"#fe0032\"\r\n  },\r\n  {\r\n    id: 8,\r\n    title: \"Бывший член команды TRAINING SANDBOX\",\r\n    description: \"Значок был вручен игроку за поддержку сервера в качестве члена команды проекта\",\r\n    icon: React.createElement(FaUserSlash),\r\n    color: \"#ababab\",\r\n    verify: 4,\r\n    textColor: \"#ababab\"\r\n  },\r\n]\r\nexport const allBadges = [\r\n  ...staffBadges, ...playerBadges,\r\n]"],"names":[],"mappings":";;;;;AAAA;AAEA;AADA;;;;AAqBO,MAAM,cAA4B;IACvC;QACE,IAAI;QACJ,OAAO;QACP,aAAa;QACb,oBAAM,qMAAA,CAAA,UAAK,CAAC,aAAa,CAAC,+IAAA,CAAA,UAAO;QACjC,OAAO;YAAC;YAAG;SAAE;QACb,OAAO;QACP,WAAW;IACb;IACA;QACE,IAAI;QACJ,OAAO;QACP,aAAa;QACb,oBAAM,qMAAA,CAAA,UAAK,CAAC,aAAa,CAAC,8IAAA,CAAA,YAAS;QACnC,QAAQ;QACR,OAAO;QACP,WAAW;IACb;IACA;QACE,IAAI;QACJ,OAAO;QACP,aAAa;QACb,oBAAM,qMAAA,CAAA,UAAK,CAAC,aAAa,CAAC,+IAAA,CAAA,eAAY;QACtC,UAAU;QACV,UAAU;QACV,OAAO;QACP,WAAW;IACb;IACA;QACE,IAAI;QACJ,OAAO;QACP,aAAa;QACb,oBAAM,qMAAA,CAAA,UAAK,CAAC,aAAa,CAAC,+IAAA,CAAA,eAAY;QACtC,UAAU;QACV,UAAU;QACV,OAAO;QACP,WAAW;IACb;IACA;QACE,IAAI;QACJ,OAAO;QACP,aAAa;QACb,oBAAM,qMAAA,CAAA,UAAK,CAAC,aAAa,CAAC,+IAAA,CAAA,SAAM;QAChC,OAAO;QACP,OAAO;QACP,WAAW;IACb;CACD;AACM,MAAM,eAA6B;IACxC;QACE,IAAI;QACJ,OAAO;QACP,aAAa;QACb,oBAAM,qMAAA,CAAA,UAAK,CAAC,aAAa,CAAC,+IAAA,CAAA,UAAO;QACjC,OAAO;QACP,UAAU;QACV,UAAU;QACV,WAAW;IACb;IACA;QACE,IAAI;QACJ,OAAO;QACP,aAAa;QACb,oBAAM,qMAAA,CAAA,UAAK,CAAC,aAAa,CAAC,+IAAA,CAAA,YAAS;QACnC,OAAO;QACP,QAAQ;QACR,WAAW;IACb;IACA;QACE,IAAI;QACJ,OAAO;QACP,aAAa;QACb,oBAAM,qMAAA,CAAA,UAAK,CAAC,aAAa,CAAC,8IAAA,CAAA,cAAW;QACrC,OAAO;QACP,QAAQ;QACR,WAAW;IACb;CACD;AACM,MAAM,YAAY;OACpB;OAAgB;CACpB"}},
    {"offset": {"line": 104, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 109, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/src/components/BadgeRenderer/BadgeRenderer.module.scss.module.css [app-client] (css module)"],"sourcesContent":["__turbopack_export_value__({\n  \"BadgeIcon\": \"BadgeRenderer-module-scss-module__WnziHq__BadgeIcon\",\n  \"badge\": \"BadgeRenderer-module-scss-module__WnziHq__badge\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA"}},
    {"offset": {"line": 113, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 119, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/src/components/Styles/TooltipStyles.tsx"],"sourcesContent":["import { Tooltip, tooltipClasses, styled, TooltipProps } from '@mui/material';\r\n\r\nexport const BootstrapTooltip = styled(({ className, ...props }: TooltipProps) => (\r\n    <Tooltip {...props} arrow classes={{ popper: className }} />\r\n))(({ theme }) => ({\r\n    [`& .${tooltipClasses.arrow}`]: {\r\n      color: theme.palette.common.black,\r\n    },\r\n    [`& .${tooltipClasses.tooltip}`]: {\r\n      backgroundColor: theme.palette.common.black,\r\n    },\r\n}));\r\n\r\nexport default BootstrapTooltip;"],"names":[],"mappings":";;;;;AAAA;AAAA;AAAA;;;AAEO,MAAM,mBAAmB,CAAA,GAAA,0LAAA,CAAA,SAAM,AAAD,EAAE,CAAC,EAAE,SAAS,EAAE,GAAG,OAAqB,iBACzE,8OAAC,6LAAA,CAAA,UAAO;QAAE,GAAG,KAAK;QAAE,KAAK;QAAC,SAAS;YAAE,QAAQ;QAAU;;;;;cACxD,CAAC,EAAE,KAAK,EAAE,GAAK,CAAC;QACf,CAAC,CAAC,GAAG,EAAE,2MAAA,CAAA,iBAAc,CAAC,KAAK,EAAE,CAAC,EAAE;YAC9B,OAAO,MAAM,OAAO,CAAC,MAAM,CAAC,KAAK;QACnC;QACA,CAAC,CAAC,GAAG,EAAE,2MAAA,CAAA,iBAAc,CAAC,OAAO,EAAE,CAAC,EAAE;YAChC,iBAAiB,MAAM,OAAO,CAAC,MAAM,CAAC,KAAK;QAC7C;IACJ,CAAC;uCAEc"}},
    {"offset": {"line": 148, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 154, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/src/components/BadgeRenderer/BadgeRenderer.tsx"],"sourcesContent":["\"use client\"\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { allBadges } from \"../../shared/consts/badges\";\r\nimport styles from \"./BadgeRenderer.module.scss\";\r\nimport BootstrapTooltip from \"../Styles/TooltipStyles\";\r\n\r\ntype BadgeRendererProps = {\r\n  player?: {\r\n    id?: number;\r\n    login?: string;\r\n    lastlogin?: string;\r\n    moder?: number;\r\n    access?: number;\r\n    verify?: number;\r\n    verifyText?: string;\r\n    mute?: number;\r\n    online?: number;\r\n    regdate?: string;\r\n  };\r\n  onBadgeStatusChange?: (hasBadges: boolean) => void;\r\n};\r\n\r\nconst BadgeRenderer: React.FC<BadgeRendererProps> = ({ player, onBadgeStatusChange }) => {\r\n  const badgesToShow = allBadges.filter((badge) => {\r\n    if (!player) return false; \r\n\r\n    if (badge.moder && badge.moder !== player.moder) return false;\r\n    if (badge.accid) {\r\n      if (Array.isArray(badge.accid)) {\r\n        if (player.id === undefined || !badge.accid.includes(player.id)) return false;\r\n      } else if (player.id === undefined || badge.accid !== player.id) {\r\n        return false;\r\n      }\r\n    }\r\n    if (badge.verify && badge.verify !== player.verify) return false;\r\n    if (\r\n      (badge.minModer !== undefined && (player.moder ?? 0) < badge.minModer) ||\r\n      (badge.maxModer !== undefined && (player.moder ?? 0) > badge.maxModer)\r\n    ) return false;\r\n    if (\r\n      (badge.minAccId !== undefined && (player.id ?? 0) < badge.minAccId) ||\r\n      (badge.maxAccId !== undefined && (player.id ?? 0) > badge.maxAccId)\r\n    ) return false;\r\n    if (\r\n      (badge.minRegDate !== undefined && !(player.regdate ?? '').includes(badge.minRegDate)) ||\r\n      (badge.maxRegDate !== undefined && (player.regdate ?? '').includes(badge.maxRegDate))\r\n    ) return false;\r\n  \r\n    return true;\r\n  });\r\n\r\n  badgesToShow.sort((a, b) => {\r\n    const idA = Number(a.id) || 0;\r\n    const idB = Number(b.id) || 0;\r\n    return idA - idB;\r\n  })\r\n  \r\n  useEffect(() => {\r\n    const hasBadges = badgesToShow.length > 0;\r\n    if (onBadgeStatusChange) {\r\n      onBadgeStatusChange(badgesToShow.length > 0);\r\n    }\r\n  }, [badgesToShow, onBadgeStatusChange])\r\n\r\n  return badgesToShow.length > 0 ? (\r\n    <>\r\n      {badgesToShow.map((badge) => (\r\n        <BootstrapTooltip \r\n          title={<><span style={{ color: `${badge.textColor}` }}>{badge.title}</span>{badge.description && <><br />{badge.description}</>}</>} \r\n          placement=\"top\" \r\n          key={badge.id || badge.title}\r\n          arrow\r\n          enterDelay={0}>\r\n          <span\r\n            className={styles.badge}\r\n            style={{ backgroundColor: badge.color }}\r\n            key={badge.id || badge.title}\r\n          >\r\n            <span \r\n              className={`${styles.BadgeIcon}`} \r\n              key={badge.id || badge.title}\r\n            >\r\n              {badge.icon}\r\n            </span>\r\n          </span>\r\n        </BootstrapTooltip>\r\n      ))}\r\n    </>\r\n  ) : null;\r\n};\r\n\r\nexport { BadgeRenderer };"],"names":[],"mappings":";;;;AACA;AACA;AACA;AACA;AAJA;;;;;;AAsBA,MAAM,gBAA8C,CAAC,EAAE,MAAM,EAAE,mBAAmB,EAAE;IAClF,MAAM,eAAe,iIAAA,CAAA,YAAS,CAAC,MAAM,CAAC,CAAC;QACrC,IAAI,CAAC,QAAQ,OAAO;QAEpB,IAAI,MAAM,KAAK,IAAI,MAAM,KAAK,KAAK,OAAO,KAAK,EAAE,OAAO;QACxD,IAAI,MAAM,KAAK,EAAE;YACf,IAAI,MAAM,OAAO,CAAC,MAAM,KAAK,GAAG;gBAC9B,IAAI,OAAO,EAAE,KAAK,aAAa,CAAC,MAAM,KAAK,CAAC,QAAQ,CAAC,OAAO,EAAE,GAAG,OAAO;YAC1E,OAAO,IAAI,OAAO,EAAE,KAAK,aAAa,MAAM,KAAK,KAAK,OAAO,EAAE,EAAE;gBAC/D,OAAO;YACT;QACF;QACA,IAAI,MAAM,MAAM,IAAI,MAAM,MAAM,KAAK,OAAO,MAAM,EAAE,OAAO;QAC3D,IACE,AAAC,MAAM,QAAQ,KAAK,aAAa,CAAC,OAAO,KAAK,IAAI,CAAC,IAAI,MAAM,QAAQ,IACpE,MAAM,QAAQ,KAAK,aAAa,CAAC,OAAO,KAAK,IAAI,CAAC,IAAI,MAAM,QAAQ,EACrE,OAAO;QACT,IACE,AAAC,MAAM,QAAQ,KAAK,aAAa,CAAC,OAAO,EAAE,IAAI,CAAC,IAAI,MAAM,QAAQ,IACjE,MAAM,QAAQ,KAAK,aAAa,CAAC,OAAO,EAAE,IAAI,CAAC,IAAI,MAAM,QAAQ,EAClE,OAAO;QACT,IACE,AAAC,MAAM,UAAU,KAAK,aAAa,CAAC,CAAC,OAAO,OAAO,IAAI,EAAE,EAAE,QAAQ,CAAC,MAAM,UAAU,KACnF,MAAM,UAAU,KAAK,aAAa,CAAC,OAAO,OAAO,IAAI,EAAE,EAAE,QAAQ,CAAC,MAAM,UAAU,GACnF,OAAO;QAET,OAAO;IACT;IAEA,aAAa,IAAI,CAAC,CAAC,GAAG;QACpB,MAAM,MAAM,OAAO,EAAE,EAAE,KAAK;QAC5B,MAAM,MAAM,OAAO,EAAE,EAAE,KAAK;QAC5B,OAAO,MAAM;IACf;IAEA,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,YAAY,aAAa,MAAM,GAAG;QACxC,IAAI,qBAAqB;YACvB,oBAAoB,aAAa,MAAM,GAAG;QAC5C;IACF,GAAG;QAAC;QAAc;KAAoB;IAEtC,OAAO,aAAa,MAAM,GAAG,kBAC3B;kBACG,aAAa,GAAG,CAAC,CAAC,sBACjB,8OAAC,6IAAA,CAAA,UAAgB;gBACf,qBAAO;;sCAAE,8OAAC;4BAAK,OAAO;gCAAE,OAAO,GAAG,MAAM,SAAS,EAAE;4BAAC;sCAAI,MAAM,KAAK;;;;;;wBAAS,MAAM,WAAW,kBAAI;;8CAAE,8OAAC;;;;;gCAAM,MAAM,WAAW;;;;;gBAC3H,WAAU;gBAEV,KAAK;gBACL,YAAY;0BACZ,cAAA,8OAAC;oBACC,WAAW,oLAAA,CAAA,UAAM,CAAC,KAAK;oBACvB,OAAO;wBAAE,iBAAiB,MAAM,KAAK;oBAAC;8BAGtC,cAAA,8OAAC;wBACC,WAAW,GAAG,oLAAA,CAAA,UAAM,CAAC,SAAS,EAAE;kCAG/B,MAAM,IAAI;uBAFN,MAAM,EAAE,IAAI,MAAM,KAAK;;;;;mBAJzB,MAAM,EAAE,IAAI,MAAM,KAAK;;;;;eANzB,MAAM,EAAE,IAAI,MAAM,KAAK;;;;;wBAkBhC;AACN"}},
    {"offset": {"line": 254, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}